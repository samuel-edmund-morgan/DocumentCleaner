#!/bin/bash

DUMP_DIR="/home/$USER/.docsclean_dump.d"
mkdir -p $DUMP_DIR
touch /home/$USER/docsclean.log

while :
do

	LOG_FILE="/home/samuel/docsclean.log"
	IFS=$'\n'
	WORK_PATH=$(grep "$(readlink -f /dev/disk/by-id/usb*)" /proc/mounts | cut -d ' ' -f 2 | sed -e "s/\\\040/ /g" )
	
	# INIT /dev/sd variable. If there is no WORK_PATH so DEVICE SHOULD BE EMPTY
	DEVICE="$(readlink -f /dev/disk/by-id/usb* | sed -n '2p')"
	if [[  "$DEVICE" == "" ]]; then
		DEVICE="$(readlink -f /dev/disk/by-id/usb* | sed -n '1p')"
        fi


	if [[ ! "$DEVICE" == *"/dev/sd"* ]]; then
   		echo "Ніяких флеш носіїв не підключено (або триває пошук флеш носіїв. Пошук може зайняти до 20 секунд). Вставте флеш носій..."
   		sleep 7
   		continue  
	fi

	if [[ "$WORK_PATH" == "" ]]; then
   		echo "ПОМИЛКА: Пристрій в системі існує, але не змонтований!Пристрій $DEVICE. Вихід..."
		udisksctl unmount -bf "$DEVICE" &>/dev/null
		printf "\nВийміть свій флеш носій зараз...\n\n"
		while :
		do
        		sleep 1
        		DEVICE="$(readlink -f /dev/disk/by-id/usb* | sed -n '2p')"
			if [[  "$DEVICE" == "" ]]; then
                		DEVICE="$(readlink -f /dev/disk/by-id/usb* | sed -n '1p')"
				if [[ ! "$DEVICE" == *"/dev/sd"* ]]; then
                                	break  
                        	fi
        		fi
		done
   	continue
	fi

	find $WORK_PATH -type f -iname "*.docx" > /tmp/docxArray
	find $WORK_PATH -type f -iname "*.doc" > /tmp/docArray
	find $WORK_PATH -type f -iname "*.rtf" > /tmp/rtfArray
	find $WORK_PATH -iname "*.lnk"  > /tmp/linkArray

	IFS=$'\n'
	docx_array=( $(grep -v -e "001.Original_Documents" -e "\/\."  /tmp/docxArray) )
	doc_array=( $(grep -v -e "001.Original_Documents"  -e "\/\."  /tmp/docArray) )
	rtf_array=( $(grep -v -e "001.Original_Documents"  -e "\/\."  /tmp/rtfArray) )
	link_array=( $(grep -v -e "001.Original_Documents"  -e "\/\."  /tmp/linkArray) )
	#readarray -t link_array < /tmp/linkArray

	rm -rf /tmp/docxArray
	rm -rf /tmp/docArray
	rm -rf /tmp/rtfArray
	rm -rf /tmp/linkArray

	#IF array empty -exit
	if [ ! "${#docx_array[@]}" -gt 0 ] && [ ! "${#rtf_array[@]}" -gt 0 ] && [ ! "${#doc_array[@]}" -gt 0 ] && [ ! "${#link_array[@]}" -gt 0 ] ; then
		udisksctl unmount -bf "$DEVICE" &>/dev/null
		echo "Документи та шкідливі ярлики на флеш носії не знайдено!"
                printf "\nВийміть свій флеш носій зараз...\n\n"
                while :
                do
                        sleep 1
                        DEVICE="$(readlink -f /dev/disk/by-id/usb* | sed -n '2p')"
                        if [[  "$DEVICE" == "" ]]; then
                                DEVICE="$(readlink -f /dev/disk/by-id/usb* | sed -n '1p')"
                                if [[ ! "$DEVICE" == *"/dev/sd"* ]]; then
                                        break  
                                fi
                        fi
                done
	continue
	fi

	printf "\nСканується шлях: $WORK_PATH"

	
printf "\n\n##########################################################-ЯРЛИКИ-##########################################################################################\n"
printf "___________________________________________________________________________________________________________________________________________________________\n"
	find $WORK_PATH -iname "*.lnk" -delete
	if [ "${#link_array[@]}" -gt 0 ]; then
               	 	for (( i=0; i<${#link_array[@]}; i++ ))
                	do
                        	echo "+++ Видалення шкідливих ярликів! ${link_array[i]}"
                        	echo "[$(date +"%T - %d.%m.%y")] : Ярлик ${link_array[i]} успішно видалено!" >> "$LOG_FILE"
                        	printf "___________________________________________________________________________________________________________________________________________________________\n"
                	done
	else
                        	echo "Шкідливих ярликів не виявлено!"
                        	echo "[$(date +"%T - %d.%m.%y")] : Шкідливих ярликів не виявлено!" >> "$LOG_FILE"
	fi



	regex='Target[[:space:]]*=[[:space:]]*[(\")|('"'"')|(\`)](https?|ftp|file):\/\/[-[:alnum:]\+&@#\/%?=~_|.;]*[-[:alnum:]\+&@#\/%=~_|][(\")|('"'"')|(\`)]'
	replace_with='Target=\"\"'
	printf "\n\n##########################################################-ДОКУМЕНТИ-######################################################################################\n"
	printf "___________________________________________________________________________________________________________________________________________________________\n"
	if [ "${#docx_array[@]}" -gt 0 ]; then
		for (( i=0; i<${#docx_array[@]}; i++ ))
		do
	   		document_fullpath="${docx_array[i]}"
			document_name=$(echo $document_fullpath | sed -e "s/ /_/g" | rev | cut -d/ -f1 | rev)
	   		document_path=$(dirname "${document_fullpath}")
			document_path=$(echo "$document_path" | cut -d'/' -f4-)

			#May be broken if names with +255 chars!!
			mkdir -p $DUMP_DIR/$document_path
                        mkdir -p $DUMP_DIR/$document_path/001.Original_Documents/
			rnd_path=$(mktemp -d "$DUMP_DIR/$document_path/$document_name".XXXXXX)
			unzip -q $document_fullpath -d $rnd_path
			mv $document_fullpath $DUMP_DIR/$document_path/001.Original_Documents/$document_name

	                if [[ $(egrep  -orl $regex $rnd_path/word/_rels/) ]]; then
	                        egrep  -orlZ $regex $rnd_path | xargs -0 sed -i -E "s/$regex/$replace_with/g"
				(cd $rnd_path && zip -q -r ../$document_name .)
				cp $DUMP_DIR/$document_path/$document_name $document_fullpath
	                        echo "+++ Чистка файлу ${docx_array[i]} завершена!"
				echo "[$(date +"%T - %d.%m.%y")] : Чистка файлу ${docx_array[i]} завершена!" >> "$LOG_FILE"
	                else
				cp $DUMP_DIR/$document_path/001.Original_Documents/$document_name $DUMP_DIR/$document_path/$document_name
				cp $DUMP_DIR/$document_path/$document_name $document_fullpath
	                        echo "--- Файл ${docx_array[i]} чистий!"
	                        echo "[$(date +"%T - %d.%m.%y")] : Файл ${docx_array[i]} чистий!" >> "$LOG_FILE"
	                fi
	   		rm -rf $rnd_path
			printf "___________________________________________________________________________________________________________________________________________________________\n"
		done
	fi


	regex='(https?|ftp|file):\/\/[-[:alnum:]\+&@#\/%?=~_|.;]*[-[:alnum:]\+&@#\/%=~_|]'
	replace_with='DELETED_LINK'
	if [ "${#rtf_array[@]}" -gt 0 ]; then
	        for (( i=0; i<${#rtf_array[@]}; i++ ))
	        do
	                document_fullpath="${rtf_array[i]}"
	                document_name=$(echo $document_fullpath | sed -e "s/ /_/g" | rev | cut -d/ -f1 | rev)
			document_path=$(dirname "${document_fullpath}")
			document_path=$(echo "$document_path" | cut -d'/' -f4-)


			#May be broken if names with +255 chars!!
			mkdir -p $DUMP_DIR/$document_path/
			mkdir -p $DUMP_DIR/$document_path/001.Original_Documents/
	                cp $document_fullpath $DUMP_DIR/$document_path/$document_name
	                mv $document_fullpath $DUMP_DIR/$document_path/001.Original_Documents/$document_name

			if [[ $(egrep  -orl $regex $DUMP_DIR/$document_path/$document_name) ]]; then
				egrep  -orlZ $regex $DUMP_DIR/$document_path/$document_name | xargs -0 sed -i -E "s/$regex/$replace_with/g"
				cp $DUMP_DIR/$document_path/$document_name $document_fullpath
				echo "+++ Чистка файлу ${rtf_array[i]} завершена!"
				echo "[$(date +"%T - %d.%m.%y")] : Чистка файлу ${rtf_array[i]} завершена!" >> "$LOG_FILE"
			else
				cp $DUMP_DIR/$document_path/001.Original_Documents/$document_name $DUMP_DIR/$document_path/$document_name
				cp $DUMP_DIR/$document_path/$document_name $document_fullpath
	    			echo "--- Файл ${rtf_array[i]} чистий!"
	                        echo "[$(date +"%T - %d.%m.%y")] : Файл ${rtf_array[i]} чистий!" >> "$LOG_FILE"
			fi
			printf "___________________________________________________________________________________________________________________________________________________________\n"
	        done
	fi


	regex='(([0-9A-Fa-f][0-9A-CE-Fa-ce-f])|([0-2A-F4-9a-f][0-9A-Fa-f]))([0-13-9]{2})(68|48)([0-9A-Fa-f]{2})?((74|54)([0-9A-Fa-f]{2})?){2}(70|50)([0-9A-Fa-f]{2})?((73|53)([0-9A-Fa-f]{2})?)?(3a|3A)([0-9A-Fa-f]{2})?((2f|2F)([0-9A-Fa-f]{2})?){2}(([0-9A-Fa-f][0-9A-DFa-df])|([0-1A-F3-9a-f][0-9A-Fa-f]))*'
	replace_with='DELETED_LINK'
	if [ "${#doc_array[@]}" -gt 0 ]; then
	        for (( i=0; i<${#doc_array[@]}; i++ ))
	        do
			document_fullpath="${doc_array[i]}"
			document_name=$(echo $document_fullpath | sed -e "s/ /_/g" | rev | cut -d/ -f1 | rev)
	                document_path=$(dirname "${document_fullpath}")
			document_path=$(echo "$document_path" | cut -d'/' -f4-)

			#May be broken if names with +255 chars!!
                        mkdir -p $DUMP_DIR/$document_path/
                        mkdir -p $DUMP_DIR/$document_path/001.Original_Documents/
			mkdir -p $DUMP_DIR/$document_path/tmpconvert/
			cp $document_fullpath $DUMP_DIR/$document_path/$document_name
			mv $document_fullpath $DUMP_DIR/$document_path/001.Original_Documents/$document_name
			xxd -p -c 0 "$DUMP_DIR/$document_path/$document_name" | tr -d \\n > "$DUMP_DIR/$document_path/tmpconvert/$document_name"
			if [[ $(egrep  -or -m 1 $regex $DUMP_DIR/$document_path/tmpconvert/$document_name) ]]; then
				while [[ $(egrep  -or -m 1 $regex $DUMP_DIR/$document_path/tmpconvert/$document_name) ]]; do
					replace_with="$(egrep -or -m 1 $regex $DUMP_DIR/$document_path/tmpconvert/$document_name | head -1 | sed 's/./0/g')"
					egrep  -orlZ $regex $DUMP_DIR/$document_path/tmpconvert/$document_name | xargs -0 sed -i  -E "s/$regex/$replace_with/1"
				done
				xxd -r -p  $DUMP_DIR/$document_path/tmpconvert/$document_name > $DUMP_DIR/$document_path/$document_name
				cp $DUMP_DIR/$document_path/$document_name $document_fullpath
				echo "+++ Чистка файлу ${doc_array[i]} завершена!"
                                echo "[$(date +"%T - %d.%m.%y")] : Чистка файлу ${doc_array[i]} завершена!" >> "$LOG_FILE"
			else
				cp $DUMP_DIR/$document_path/001.Original_Documents/$document_name $DUMP_DIR/$document_path/$document_name
				cp $DUMP_DIR/$document_path/$document_name $document_fullpath
                                echo "--- Файл ${doc_array[i]} чистий!"
                                echo "[$(date +"%T - %d.%m.%y")] : Файл ${doc_array[i]} чистий!" >> "$LOG_FILE"
                        fi
			rm -rf $DUMP_DIR/$document_path/tmpconvert/
			printf "___________________________________________________________________________________________________________________________________________________________\n"
	        done
	fi

		udisksctl unmount -bf "$DEVICE" &>/dev/null
                printf "\nВийміть свій флеш носій зараз...\n\n"
                while :
                do
                        sleep 1
                        DEVICE="$(readlink -f /dev/disk/by-id/usb* | sed -n '2p')"
                        if [[  "$DEVICE" == "" ]]; then
                                DEVICE="$(readlink -f /dev/disk/by-id/usb* | sed -n '1p')"
                                if [[ ! "$DEVICE" == *"/dev/sd"* ]]; then
                                        break  
                                fi
                        fi
                done

done
